trigger:
- master

jobs:
- job: Build
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: PowerShell@2
    displayName: 'Build'
    inputs:
      filePath: 'build.ps1'
      arguments: 'Compile'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)'
      artifactName: BuildResult
- job: Test
  dependsOn: Build
  strategy:
    parallel: 2
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts'
    inputs:
      artifactName: BuildResult
      downloadPath: $(System.DefaultWorkingDirectory)
  - task: PowerShell@2
    displayName: 'Test'
    inputs:
      filePath: 'build.ps1'
      arguments: 'Test --skip --partition-Test $(System.JobPositionInPhase)/$(System.TotalJobsInPhase)'
- job: Package
  dependsOn:
  - Test
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: echo After all partitions

trigger:
- master

jobs:
# This job build the app and packages it to artifacts with name "BuildResult"
- job: Build
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: PowerShell@2
    displayName: 'Build'
    inputs:
      filePath: 'build.ps1'
      arguments: 'Compile'
  - task: PublishPipelineArtifact@1
    inputs:
      path: $(System.DefaultWorkingDirectory)
      artifact: BuildResult
# This job depends on the "Build job"
# It downloads artifacts from "BuildResult" and runs two instances of the job in parallel.
# Number of parallel instances are configured strategy: parallel: X, where X is the number of parallel jobs to run.
# We have access to what the current job number is and the total number of jobs through System.JobPositionInPhase and System.TotalJobsInPhase variables respectively.
- job: Test
  dependsOn: Build
  strategy:
    parallel: 2
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: DownloadPipelineArtifact@2
    displayName: 'Download Artifacts'
    inputs:
      artifactName: BuildResult
      targetPath: $(System.DefaultWorkingDirectory)
  - task: PowerShell@2
    displayName: 'Test'
    inputs:
      filePath: 'build.ps1'
      arguments: 'Test --skip --partition-Test $(System.JobPositionInPhase)/$(System.TotalJobsInPhase)'
# This job depends on the Test job and it is here to demostrate waiting on parallel jobs.
- job: Package
  dependsOn:
  - Test
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: echo After all partitions
